specVersion: 0.0.2
description: AdEx is a solution for digital advertising that reduces ad fraud and protects user privacy. It's backbone is the AdEx protocol, which consists of payment channels (AdExCore), simple staking and an accounts system that enables gasless transactions.
schema:
  file: ./schema.graphql

dataSources:
  - kind: ethereum/contract
    name: Staking
    network: mainnet
    source:
      address: "0x4846c6837ec670bbd1f5b485471c8f64ecb9c534"
      abi: Staking
      startBlock: 10593719
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - Bond
        - Slash
        - UnbondRequest
        - Unbonded
      abis:
        - name: Staking
          file: ./abis/Staking.json
      eventHandlers:
        - event: LogBond(indexed address,uint256,bytes32,uint256,uint64,uint256)
          handler: handleLogBond
        - event: LogSlash(indexed bytes32,uint256,uint256)
          handler: handleLogSlash
        - event: LogUnbondRequested(indexed address,indexed bytes32,uint64,uint256)
          handler: handleLogUnbondRequested
        - event: LogUnbonded(indexed address,indexed bytes32,uint256)
          handler: handleLogUnbonded
      file: ./src/staking.ts

  - kind: ethereum/contract
    name: AdExCore
    network: mainnet
    source:
      address: "0x333420fc6a897356e69b62417cd17ff012177d2b"
      abi: AdExCore
      startBlock: 7438381
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - Channel
        - ChannelOpen
        - ChannelWithdrawExpired
        - ChannelWithdraw
      abis:
        - name: AdExCore
          file: ./abis/AdExCore.json
      eventHandlers:
        - event: LogChannelOpen(indexed bytes32)
          handler: handleLogChannelOpen
        - event: LogChannelWithdrawExpired(indexed bytes32,uint256)
          handler: handleLogChannelWithdrawExpired
        - event: LogChannelWithdraw(indexed bytes32,uint256)
          handler: handleLogChannelWithdraw
      callHandlers:
        - function: channelOpen((address,address,uint256,uint256,address[],bytes32))
          handler: handleChannel
      file: ./src/adexcore.ts

  - kind: ethereum/contract
    name: IdentityFactory
    network: mainnet
    source:
      address: "0xd5a1c8a5ea507ea459216ff34939cae3326dba6f"
      abi: IdentityFactory
      startBlock: 8989224
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - Identity
      abis:
        - name: IdentityFactory
          file: ./abis/IdentityFactory.json
      eventHandlers:
        - event: LogDeployed(address,uint256)
          handler: handleLogDeployed
      file: ./src/identityfactory.ts

  - kind: ethereum/contract
    name: IdentityStakingFactory
    network: mainnet
    source:
      address: "0x9fe0d438e3c29c7cff949ad8e8da9403a531cc1a"
      abi: IdentityFactory
      startBlock: 10592220
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - Identity
      abis:
        - name: IdentityFactory
          file: ./abis/IdentityFactory.json
      eventHandlers:
        - event: LogDeployed(address,uint256)
          handler: handleLogDeployed
      file: ./src/identityfactory.ts

templates:
  - name: Identity
    kind: ethereum/contract
    network: mainnet
    source:
      abi: Identity
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.1
      language: wasm/assemblyscript
      file: ./src/identity.ts
      entities:
        - IdentityPrivilege
        - IdentityRoutine
      abis:
        - name: Identity
          file: ./abis/Identity.json
      eventHandlers:
        - event: LogPrivilegeChanged(indexed address,uint8)
          handler: handleLogPrivilegeChanged
        - event: LogRoutineAuth(bytes32,bool)
          handler: handleLogRoutineAuth
          